version: v1.0
name: Go project
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804

blocks:
  - name: Build project
    task:
      jobs:
      - name: Get Go packages
        commands:
          - checkout
          - go get github.com/lib/pq
          - sem-service start postgres
          - go build webServer.go
          - mkdir bin
          - mv webServer bin
          - cache store $(checksum webServer.go) bin

  - name: Check code stype
    task:
      jobs:
      - name: gofmt
        commands:
          - checkout
          - yes | sudo apt install gccgo-go
          - gofmt webServer.go | diff --ignore-tab-expansion webServer.go -

  - name: Unit Tests
    task:
      jobs:
      - name: Test Web Server
        commands:
          - checkout
          - cache restore $(checksum webServer.go)
          - ./bin/webServer 8001 &
          - wget -p localhost:8001 -O /tmp/test
          - wget -p localhost:8001/time -O /tmp/testTime
          - cat /tmp/test
          - cat /tmp/testTime

      - name: Test Postgres
        commands:
          - sem-service start postgres
          - sleep 5
          - psql -p 5432 -h localhost -U postgres -c "Select NOW()"

  - name: Integration Tests
    task:
      jobs:
      - name: Web Server + DBMS
        commands:
          - checkout
          - sem-service start postgres
          - cache restore $(checksum webServer.go)
          - psql -p 5432 -h localhost -U postgres -c "CREATE DATABASE s2"
          - psql -h localhost -d s2 -U postgres -f testData.sql
          - ./bin/webServer 8001 &
          - wget -p localhost:8001/getdata -O /tmp/getTestData
          - cat /tmp/getTestData

  - name: Test application
    task:
      jobs:
      - name: Interact with application
        commands:
          - checkout
          - sem-service start postgres
          - cache restore $(checksum webServer.go)
          - psql -p 5432 -h localhost -U postgres -c "CREATE DATABASE s2"
          - psql -h localhost -d s2 -U postgres -f data.sql
          - ./bin/webServer 8001 &
          - wget -p localhost:8001/getData -O /tmp/getdata
          - cat /tmp/getData

